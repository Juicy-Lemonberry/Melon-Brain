services:
  server:
    networks:
      melon-net:
    build:
      context: ./melon-server
      dockerfile: ./Dockerfile  
    ports:
      - '5000:5000'
    volumes:
      - ./melon-server:/app

  client:
    networks:
      melon-net:
    build:
      context: ./melon-client
      dockerfile: ./Dockerfile 
    ports:
      - '3000:3000'
    volumes:
      - ./melon-client:/app

  mongodb:
    networks:
      melon-net:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MELON_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MELON_MONGO_PASSWORD}

  postgres:
    networks:
      melon-net:
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: melon_brain_db
      POSTGRES_USER: ${MELON_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${MELON_POSTGRES_PASSWORD}
    command: postgres -c listen_addresses=*

  flyway:
    networks:
      melon-net:
    image: flyway/flyway:latest
    command:
      - "-url=jdbc:postgresql://postgres:5432/melon_brain_db"
      - "-user=${MELON_POSTGRES_USERNAME}"
      - "-password=${MELON_POSTGRES_PASSWORD}"
      - "migrate"
    volumes:
      - ./postgreSQL-migrations:/flyway/sql

  pgadmin:
    networks:
      melon-net:
    image: dpage/pgadmin4
    ports:
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}

networks:
  melon-net:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./mongo_volume